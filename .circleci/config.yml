version: 2

jobs:
  check-code-formatting:
    docker:
      - image: circleci/python:3.7-stretch-node-browsers

    steps:
      - checkout
      - run:
          name: Install black
          command: 'sudo pip install black'
      - run:
          name: Check formatting with black
          command: 'black --check .'

  # Core
  python-2.7-core:
    docker:
      - image: circleci/python:2.7-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_27: python2.7

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py27-core'
          no_output_timeout: 20m

  python-3.5-core:
    docker:
      - image: circleci/python:3.5-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_35: python3.5

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py35-core'
          no_output_timeout: 20m

  python-3.6-core:
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_36: python3.6

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py36-core'
          no_output_timeout: 20m

  python-3.7-core:
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_37: python3.7

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py37-core'
          no_output_timeout: 20m

  # Optional
  python-2.7-optional:
    docker:
      - image: circleci/python:2.7-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_27: python2.7

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Install npm dependencies
          command: cd packages/python/plotly/plotly/tests/test_optional/test_jupyter && npm install
          no_output_timeout: 20m
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py27-optional'
          no_output_timeout: 20m

  python-3.5-optional:
    docker:
      - image: circleci/python:3.5-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_35: python3.5

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Install npm dependencies
          command: cd packages/python/plotly/plotly/tests/test_optional/test_jupyter && npm install
          no_output_timeout: 20m
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py35-optional'
          no_output_timeout: 20m

  python-3.6-optional:
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_36: python3.6

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Install npm dependencies
          command: cd packages/python/plotly/plotly/tests/test_optional/test_jupyter && npm install
          no_output_timeout: 20m
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py36-optional'
          no_output_timeout: 20m

  python-3.7-optional:
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_37: python3.7

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Install npm dependencies
          command: cd packages/python/plotly/plotly/tests/test_optional/test_jupyter && npm install
          no_output_timeout: 20m
      - run:
          name: Test with tox
          command: 'cd packages/python/plotly; tox -e py37-optional'
          no_output_timeout: 20m

  # Plot.ly
  python-2.7-plot_ly:
    docker:
      - image: circleci/python:2.7-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_27: python2.7

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Test with tox
          command: 'cd packages/python/chart-studio; tox -e py27-plot_ly'
          no_output_timeout: 20m

  python-3.5-plot_ly:
    docker:
      - image: circleci/python:3.5-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_35: python3.5

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Test with tox
          command: 'cd packages/python/chart-studio; tox -e py35-plot_ly'
          no_output_timeout: 20m

  python-3.7-plot_ly:
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_37: python3.7

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install tox'
      - run:
          name: Test with tox
          command: 'cd packages/python/chart-studio; tox -e py37-plot_ly'
          no_output_timeout: 20m

  python-2-7-orca:
    docker:
      - image: circleci/node:10.9-stretch-browsers
        environment:
          PYTHON_VERSION: 2.7

    steps:
      - checkout
      - restore_cache:
          keys:
            - conda-27-v1-{{ checksum ".circleci/create_conda_optional_env.sh" }}
      - run:
          name: Create conda environment
          command: .circleci/create_conda_optional_env.sh

      - save_cache:
          key: conda-27-v1-{{ checksum ".circleci/create_conda_optional_env.sh" }}
          paths:
            - /home/circleci/miniconda/
      - run:
          name: Run Tests
          command: |
            . /home/circleci/miniconda/etc/profile.d/conda.sh
            conda activate circle_optional
            pytest --disable-warnings packages/python/plotly/plotly/tests/test_core
            pytest packages/python/plotly/plotly/tests/test_orca

      - store_artifacts:
            path: plotly/tests/test_orca/images/linux/failed

  python-3-5-orca:
    docker:
      - image: circleci/node:10.9-stretch-browsers
        environment:
          PYTHON_VERSION: 3.5

    steps:
      - checkout
      - restore_cache:
          keys:
            - conda-35-v1-{{ checksum ".circleci/create_conda_optional_env.sh" }}
      - run:
          name: Create conda environment
          command: .circleci/create_conda_optional_env.sh

      - save_cache:
          key: conda-35-v1-{{ checksum ".circleci/create_conda_optional_env.sh" }}
          paths:
            - /home/circleci/miniconda/
      - run:
          name: Run Tests
          command: |
            . /home/circleci/miniconda/etc/profile.d/conda.sh
            conda activate circle_optional
            pytest --disable-warnings packages/python/plotly/plotly/tests/test_core
            pytest packages/python/plotly/plotly/tests/test_orca

      - store_artifacts:
            path: plotly/tests/test_orca/images/linux/failed

  python-3-7-orca:
    docker:
      - image: circleci/node:10.9-stretch-browsers
        environment:
          PYTHON_VERSION: 3.7

    steps:
      - checkout
      - restore_cache:
          keys:
            - conda-37-v1-{{ checksum ".circleci/create_conda_optional_env.sh" }}
      - run:
          name: Create conda environment
          command: .circleci/create_conda_optional_env.sh

      - save_cache:
          key: conda-37-v1-{{ checksum ".circleci/create_conda_optional_env.sh" }}
          paths:
            - /home/circleci/miniconda/
      - run:
          name: Run Tests
          command: |
            . /home/circleci/miniconda/etc/profile.d/conda.sh
            conda activate circle_optional
            pytest --disable-warnings packages/python/plotly/plotly/tests/test_core
            pytest packages/python/plotly/plotly/tests/test_orca

      - store_artifacts:
            path: plotly/tests/test_orca/images/linux/failed

  plotlyjs_dev_build:
    docker:
      - image: circleci/python:3.7-stretch-node-browsers
        environment:
          PLOTLY_TOX_PYTHON_37: python3.7
          LANG: en_US.UTF-8

    steps:
      - checkout
      - run:
          name: Install tox
          command: 'sudo pip install retrying tox black inflect'
      - run:
          name: Update jupyterlab-plotly version
          command: 'cd packages/python/plotly; python setup.py updateplotlywidgetversion'
      - run:
          name: Update plotly.js to dev
          command: 'cd packages/python/plotly; python setup.py updateplotlyjsdev'
      - run:
          name: Test with tox
          command: |
            cd packages/python/plotly
            locale
            tox -e py37-core -- -a '!nodev'
          no_output_timeout: 20m
      - run:
          name: Commit
          command: |
            cd packages/python/plotly
            sudo mkdir /dist
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git add -A
            git commit -m "Codegen"
          when: always
      - run:
          name: Build source distribution packages
          command: |
            cd packages/python/plotly
            python setup.py sdist
            sudo cp dist/* /dist
          when: always
      - run:
          name: npm-pack widget
          command: |
            cd packages/javascript/jupyterlab-plotly/
            npm install webpack
            npm pack
            sudo cp ./jupyterlab-plotly* /dist
          when: always
      - store_artifacts:
          path: packages/python/plotly/dist

workflows:
  version: 2
  code_formatting:
    jobs:
      - check-code-formatting
  dev_build:
    jobs:
      - plotlyjs_dev_build

  build:
    jobs:
      - python-2.7-core
      - python-3.5-core
      - python-3.6-core
      - python-3.7-core
      - python-2.7-optional
      - python-3.5-optional
      - python-3.6-optional
      # 3.7 optional disabled due to current shapely incompatibility
      # - python-3.7-optional
      - python-2.7-plot_ly
      - python-3.7-plot_ly:
          requires:
            - python-2.7-plot_ly
      - python-2-7-orca
      - python-3-5-orca
      - python-3-7-orca
